services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.audit.enabled=true
      - ELASTIC_PASSWORD=somethingsecret
      - KIBANA_SYSTEM_PASSWORD=kibana_password_123
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - otel-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f -u elastic:somethingsecret http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - otel-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:5601/api/status | grep -q '\"level\":\"available\"'" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otelcol-contrib/config.yaml" ]
    volumes:
      - ./config.yml:/etc/otelcol-contrib/config.yaml
      - jenkins_data:/var/jenkins_home:ro

    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
    depends_on:
      - elasticsearch
    networks:
      - otel-network

  # APM-Server
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.11.0
    container_name: apm-server
    ports:
      - "8200:8200"
    environment:
      - LOGGING_TO_FILES=false
      - LOGGING_TO_STDERR=true
      - LOGGING_LEVEL=info
    volumes:
      - ./apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    networks:
      - otel-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8200/intake/v2/events || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  #RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq_p
    ports:
      - 5672:5672
      - 15672:15672

    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - otel-network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  elasticsearch_data:
  jenkins_data:


networks:
  otel-network:
    driver: bridge
    name: otel-network
